var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GnuplotRecipes","category":"page"},{"location":"#GnuplotRecipes","page":"Home","title":"GnuplotRecipes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GnuplotRecipes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"using GnuplotRecipes, Gnuplot\nGnuplot.quitall()\nmkpath(\"assets\")\nGnuplot.options.term = \"unknown\"\nGnuplot.options.mime[MIME\"text/html\"] = \"svg size 600,300 dynamic enhanced standalone fontscale 0.9\"\nempty!(Gnuplot.options.init)\npush!( Gnuplot.options.init, linetypes(:Set1_8, lw=1.5, ps=1.5))\nsaveas(file) = save(term=\"pngcairo size 550,350 fontscale 0.8\", output=\"assets/$(file).png\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Measurements, DataFrames\ntable = DataFrame(names=[\"very long label\", \"b\", \"c\"],\n                  before=[10, 11, 13],\n                  after=collect(4:-1:2) .± 1)\n@gp bars(table) \"set key left reverse Left\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GnuplotRecipes]","category":"page"},{"location":"#GnuplotRecipes.bars-Tuple{Any}","page":"Home","title":"GnuplotRecipes.bars","text":"bars(table; kwargs...)::Vector{Gnuplot.PlotElement}\n\nExplicit recipe to plot bar graphs from tabular data. Measurement-type data are plot with errorbars style.\n\nArguments\n\ntable: data to plot. The first column should contains text labels, the other columns the plotted values. If the values are of Measurement type, they will be plotted with errorbars style, unless overridden with hist_style.\nbox_width=0.8: the width of the boxes. One means that the boxes touch each other.\ngap::Union{Int64,Nothing}=nothing: The gap between bar clusters. If nothing, it is set automatically depending on the number of bars in the cluster; to zero for one bar in the cluster, to 1 for multiple bars.\nhist_style=nothing: histogram style — see Gnuplot documentation.\nfill_style=\"solid 1 border -1\": fill style — see Gnuplot documentation.\nerrorbars=\"\": errorbars style — see Gnuplot documentation.\nlabel_rot=-30: label rotation angle; if > 0, align label to right.\nlabel_enhanced=false: whether to apply Gnuplot enhanced formatting to labels.\nkey_enhanced=false: whether to apply Gnuplot enhanced formatting to data keys.\ny2cols=[]: Columns (specified as symbols) which should be plot against y2 axis.\nlinetypes=1:ncol(table)-1: Line types (colors) used for different bars\nxlabelcol=1: Index of columns containing labels.\n\nExample\n\njulia> using Measurements, Gnuplot, DataFrames\n\njulia> table = DataFrame(names=[\"very long label\", \"b\", \"c\"],\n                         temp=10:12,\n                         speed=collect(4:-1:2) .± 1)\n3×3 DataFrame\n Row │ names            temp   speed\n     │ String           Int64  Measurem…\n─────┼───────────────────────────────────\n   1 │ very long label     10    4.0±1.0\n   2 │ b                   11    3.0±1.0\n   3 │ c                   12    2.0±1.0\n\njulia> @gp bars(table)\n\n\n\n\n\n\n","category":"method"},{"location":"#GnuplotRecipes.ncol-Tuple{Any}","page":"Home","title":"GnuplotRecipes.ncol","text":"Helper function returning the number of columns in the table.\n\n\n\n\n\n","category":"method"},{"location":"#GnuplotRecipes.nrow-Tuple{Any}","page":"Home","title":"GnuplotRecipes.nrow","text":"Helper function returning the number of rows in the table.\n\n\n\n\n\n","category":"method"}]
}
